# @title #**Project background** 
#This will be a short video introducing the content creator(s) and motivating the research direction of the template.
#The Tech team will add code to format and display the video

!pip install condacolab      
import condacolab
condacolab.install()

!mamba install xarray-datatree intake intake-esm gcsfs xmip aiohttp cartopy nc-time-axis cf_xarray xarrayutils "esmf<=8.3.1" xesmf 

import time
tic = time.time()

import pandas as pd
import intake
import numpy as np
import matplotlib.pyplot as plt
import xarray as xr
import xesmf as xe

from xmip.preprocessing import combined_preprocessing
from xarrayutils.plotting import shaded_line_plot

from datatree import DataTree
from xmip.postprocessing import _parse_metric

import cartopy.crs as ccrs
import random
from google.colab import drive




# @title Figure settings
import ipywidgets as widgets       # interactive display
%config InlineBackend.figure_format = 'retina'
plt.style.use("https://raw.githubusercontent.com/ClimateMatchAcademy/course-content/main/cma.mplstyle")
# model_colors = {k:f"C{ki}" for ki, k in enumerate(source_ids)}


# Importing 

col = intake.open_esm_datastore("https://storage.googleapis.com/cmip6/pangeo-cmip6.json") # open an intake catalog containing the Pangeo CMIP cloud data

# pick our five example models
# There are many more to test out! Try executing `col.df['source_id'].unique()` to get a list of all available models
source_ids = ['MPI-ESM1-2-LR']

# from the full `col` object, create a subset using facet search
cat = col.search(
    source_id=source_ids,
    variable_id='tas',
    member_id='r1i1p1f1',
    table_id='3hr',
    grid_label='gn',
    experiment_id = ['historical'],# add scenarios if interested in projection
    require_all_on = ['source_id'] #make sure that we only get models which have all of the above experiments
)

# convert the sub-catalog into a datatree object, by opening each dataset into an xarray.Dataset (without loading the data)
kwargs = dict(
    preprocess=combined_preprocessing, #apply xMIP fixes to each dataset
    xarray_open_kwargs=dict(use_cftime=True), #ensure all datasets use the same time index
    storage_options={'token':'anon'} #anonymous/public authentication to google cloud storage
)
# hopefully we can implement https://github.com/intake/intake-esm/issues/562 before the 
# actual tutorial, so this would be a lot cleaner
cat.esmcat.aggregation_control.groupby_attrs = ['source_id', 'experiment_id']
dt = cat.to_datatree(**kwargs)

# select just a single model and experiment
tas_historical= dt['MPI-ESM1-2-LR']['historical'].ds.tas
print('The time range is:')
print( tas_historical.time[0].data.astype('M8[h]') , 'to', tas_historical.time[-1].data.astype('M8[h]') )

%matplotlib inline

fig, (ax_present) = plt.subplots(
    figsize=[12,6],
    subplot_kw={'projection':ccrs.Robinson()}
)

# plot a timestep for 2020
tas_present = tas_historical.sel(time='2013-07-01T00').squeeze()
tas_present.plot(ax=ax_present, x='lon', y='lat', transform=ccrs.PlateCarree(), cmap='magma', robust=True)
ax_present.coastlines()
ax_present.set_title('July, 1st 2013')

# Code to retrieve and load the data
ulr = 'https://raw.githubusercontent.com/Sshamekh/Heatwave/f85f43997e3d6ae61e5d729bf77cfcc188fbf2fd/data_cereal_land.csv'
import pandas as pd
ds_cereal_land = pd.read_csv(ulr)
ds_cereal_land.head() 
